$date
	Mon May  4 04:06:15 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module reg_file_tb $end
$var wire 8 ! REGOUT2 [7:0] $end
$var wire 8 " REGOUT1 [7:0] $end
$var reg 1 # CLK $end
$var reg 3 $ READREG1 [2:0] $end
$var reg 3 % READREG2 [2:0] $end
$var reg 1 & RESET $end
$var reg 8 ' WRITEDATA [7:0] $end
$var reg 1 ( WRITEENABLE $end
$var reg 3 ) WRITEREG [2:0] $end
$scope module myregfile $end
$var wire 1 # CLK $end
$var wire 8 * IN [7:0] $end
$var wire 3 + INADDRESS [2:0] $end
$var wire 8 , OUT1 [7:0] $end
$var wire 3 - OUT1ADDRESS [2:0] $end
$var wire 8 . OUT2 [7:0] $end
$var wire 3 / OUT2ADDRESS [2:0] $end
$var wire 1 & RESET $end
$var wire 1 ( WRITE $end
$var integer 32 0 i [31:0] $end
$var integer 32 1 j [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
0(
bx '
0&
bx %
bx $
0#
bx "
bx !
$end
#1
b1 1
b0 0
b1 %
b1 /
b0 $
b0 -
1&
#5
b0 !
b0 .
b0 "
b0 ,
1#
#9
0&
#10
0#
#14
1(
b10100 '
b10100 *
b0 )
b0 +
#15
1#
#19
b10100 "
b10100 ,
#20
0#
#24
0(
#25
b10 0
b10 $
b10 -
1#
#27
b0 "
b0 ,
#30
0#
#34
1(
b11100 '
b11100 *
b10 )
b10 +
#35
1#
#39
b11100 "
b11100 ,
#40
0#
#44
0(
#45
1#
#50
0#
#54
b10 1
b0 0
b10 %
b10 /
b0 $
b0 -
#55
1#
#56
b11100 !
b11100 .
b10100 "
b10100 ,
#60
0#
#64
1(
b111100 '
b111100 *
b101 )
b101 +
#65
1#
#70
0#
#74
b101111 '
b101111 *
#75
1#
#80
0#
#84
0(
#85
1#
#90
0#
#94
b101 1
b101 0
b101 %
b101 /
b101 $
b101 -
#95
1#
#96
b101111 !
b101111 .
b101111 "
b101111 ,
#100
0#
1(
b11110 '
b11110 *
#105
1#
0(
#110
0#
#115
b1 1
1#
b1 %
b1 /
#117
b0 !
b0 .
#120
0#
#125
1#
