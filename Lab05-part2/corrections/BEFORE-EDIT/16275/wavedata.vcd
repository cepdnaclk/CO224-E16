$date
	Sun May  3 23:42:00 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 8 ! OUT2 [7:0] $end
$var wire 8 " OUT1 [7:0] $end
$var reg 1 # CLK $end
$var reg 8 $ IN [7:0] $end
$var reg 3 % INADDRESS [2:0] $end
$var reg 3 & OUT1ADDRESS [2:0] $end
$var reg 3 ' OUT2ADDRESS [2:0] $end
$var reg 1 ( RESET $end
$var reg 1 ) WRITE $end
$scope module rg $end
$var wire 1 # CLK $end
$var wire 8 * IN [7:0] $end
$var wire 3 + INADDRESS [2:0] $end
$var wire 3 , OUT1ADDRESS [2:0] $end
$var wire 3 - OUT2ADDRESS [2:0] $end
$var wire 1 ( RESET $end
$var wire 1 ) WRITE $end
$var wire 8 . OUT2 [7:0] $end
$var wire 8 / OUT1 [7:0] $end
$scope module rg $end
$var wire 1 # CLK $end
$var wire 8 0 IN [7:0] $end
$var wire 3 1 INADDRESS [2:0] $end
$var wire 3 2 OUT1ADDRESS [2:0] $end
$var wire 3 3 OUT2ADDRESS [2:0] $end
$var wire 1 ( RESET $end
$var wire 1 ) WRITE $end
$var reg 8 4 OUT1 [7:0] $end
$var reg 8 5 OUT2 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 5
bx 4
b10 3
b1 2
bx 1
bx 0
bx /
bx .
b10 -
b1 ,
bx +
bx *
0)
0(
b10 '
b1 &
bx %
bx $
1#
bx "
bx !
$end
#2
1(
#5
0#
#6
b0 !
b0 .
b0 5
b0 "
b0 /
b0 4
#10
1#
#13
0(
#14
b100 '
b100 -
b100 3
b11 &
b11 ,
b11 2
#15
0#
#19
b11 %
b11 +
b11 1
b1111 $
b1111 *
b1111 0
1)
#20
1#
#24
b1111 "
b1111 /
b1111 4
#25
0#
#26
0)
#29
1(
#30
1#
#33
b0 "
b0 /
b0 4
#34
0(
#35
0#
#38
b100 %
b100 +
b100 1
b10010 $
b10010 *
b10010 0
#39
b1100 $
b1100 *
b1100 0
1)
#40
1#
#44
b1100 !
b1100 .
b1100 5
#45
0#
#46
0)
